import java.util.logging.Level;
import java.util.logging.Logger;
import javax.script.ScriptEngine;
import javax.script.ScriptEngineManager;
import javax.script.ScriptException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author kim45
 */
public class MainFrame extends javax.swing.JFrame {
    ScriptEngineManager manager = new ScriptEngineManager();
    ScriptEngine engine = manager.getEngineByName("JavaScript");
    float memory = 0;
    int symbol = 0;
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textField = new javax.swing.JTextField();
        btnBackspace = new javax.swing.JButton();
        btnCE = new javax.swing.JButton();
        btnC = new javax.swing.JButton();
        btnMC = new javax.swing.JButton();
        btnMR = new javax.swing.JButton();
        btnMS = new javax.swing.JButton();
        btnMP = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btnsqrt = new javax.swing.JButton();
        btn0 = new javax.swing.JButton();
        btnPM = new javax.swing.JButton();
        btnPoint = new javax.swing.JButton();
        btnDivision = new javax.swing.JButton();
        btnMultiply = new javax.swing.JButton();
        btnMinus = new javax.swing.JButton();
        btnPlus = new javax.swing.JButton();
        btnReminder = new javax.swing.JButton();
        btnFraction = new javax.swing.JButton();
        btnEqual = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("계산기");

        textField.setFont(new java.awt.Font("굴림", 0, 36)); // NOI18N
        textField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        btnBackspace.setFont(new java.awt.Font("맑은 고딕", 1, 36)); // NOI18N
        btnBackspace.setForeground(new java.awt.Color(255, 0, 0));
        btnBackspace.setText("Backspace");
        btnBackspace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackspaceActionPerformed(evt);
            }
        });

        btnCE.setFont(new java.awt.Font("맑은 고딕", 1, 36)); // NOI18N
        btnCE.setForeground(new java.awt.Color(255, 0, 0));
        btnCE.setText("CE");
        btnCE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCEActionPerformed(evt);
            }
        });

        btnC.setFont(new java.awt.Font("맑은 고딕", 1, 36)); // NOI18N
        btnC.setForeground(new java.awt.Color(255, 0, 0));
        btnC.setText("C");
        btnC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCActionPerformed(evt);
            }
        });

        btnMC.setFont(new java.awt.Font("맑은 고딕", 1, 36)); // NOI18N
        btnMC.setForeground(new java.awt.Color(255, 0, 0));
        btnMC.setText("MC");
        btnMC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMCActionPerformed(evt);
            }
        });

        btnMR.setFont(new java.awt.Font("맑은 고딕", 1, 36)); // NOI18N
        btnMR.setForeground(new java.awt.Color(255, 0, 0));
        btnMR.setText("MR");
        btnMR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMRActionPerformed(evt);
            }
        });

        btnMS.setFont(new java.awt.Font("맑은 고딕", 1, 36)); // NOI18N
        btnMS.setForeground(new java.awt.Color(255, 0, 0));
        btnMS.setText("MS");
        btnMS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMSActionPerformed(evt);
            }
        });

        btnMP.setFont(new java.awt.Font("맑은 고딕", 1, 36)); // NOI18N
        btnMP.setForeground(new java.awt.Color(255, 0, 0));
        btnMP.setText("M+");
        btnMP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMPActionPerformed(evt);
            }
        });

        btn7.setFont(new java.awt.Font("맑은 고딕", 1, 36)); // NOI18N
        btn7.setForeground(new java.awt.Color(0, 0, 255));
        btn7.setText("7");
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });

        btn8.setFont(new java.awt.Font("맑은 고딕", 1, 36)); // NOI18N
        btn8.setForeground(new java.awt.Color(0, 0, 255));
        btn8.setText("8");
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });

        btn9.setFont(new java.awt.Font("맑은 고딕", 1, 36)); // NOI18N
        btn9.setForeground(new java.awt.Color(0, 0, 255));
        btn9.setText("9");
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });

        btn4.setFont(new java.awt.Font("맑은 고딕", 1, 36)); // NOI18N
        btn4.setForeground(new java.awt.Color(0, 0, 255));
        btn4.setText("4");
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        btn5.setFont(new java.awt.Font("맑은 고딕", 1, 36)); // NOI18N
        btn5.setForeground(new java.awt.Color(0, 0, 255));
        btn5.setText("5");
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });

        btn6.setFont(new java.awt.Font("맑은 고딕", 1, 36)); // NOI18N
        btn6.setForeground(new java.awt.Color(0, 0, 255));
        btn6.setText("6");
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });

        btn1.setFont(new java.awt.Font("맑은 고딕", 1, 36)); // NOI18N
        btn1.setForeground(new java.awt.Color(0, 0, 255));
        btn1.setText("1");
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btn2.setFont(new java.awt.Font("맑은 고딕", 1, 36)); // NOI18N
        btn2.setForeground(new java.awt.Color(0, 0, 255));
        btn2.setText("2");
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn3.setFont(new java.awt.Font("맑은 고딕", 1, 36)); // NOI18N
        btn3.setForeground(new java.awt.Color(0, 0, 255));
        btn3.setText("3");
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btnsqrt.setFont(new java.awt.Font("맑은 고딕", 1, 36)); // NOI18N
        btnsqrt.setForeground(new java.awt.Color(0, 0, 255));
        btnsqrt.setText("sqrt");
        btnsqrt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsqrtActionPerformed(evt);
            }
        });

        btn0.setFont(new java.awt.Font("맑은 고딕", 1, 36)); // NOI18N
        btn0.setForeground(new java.awt.Color(0, 0, 255));
        btn0.setText("0");
        btn0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn0ActionPerformed(evt);
            }
        });

        btnPM.setFont(new java.awt.Font("맑은 고딕", 1, 36)); // NOI18N
        btnPM.setForeground(new java.awt.Color(0, 0, 255));
        btnPM.setText("+/-");
        btnPM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPMActionPerformed(evt);
            }
        });

        btnPoint.setFont(new java.awt.Font("맑은 고딕", 1, 36)); // NOI18N
        btnPoint.setForeground(new java.awt.Color(0, 0, 255));
        btnPoint.setText(".");
        btnPoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPointActionPerformed(evt);
            }
        });

        btnDivision.setFont(new java.awt.Font("맑은 고딕", 1, 36)); // NOI18N
        btnDivision.setForeground(new java.awt.Color(255, 0, 0));
        btnDivision.setText("/");
        btnDivision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDivisionActionPerformed(evt);
            }
        });

        btnMultiply.setFont(new java.awt.Font("맑은 고딕", 1, 36)); // NOI18N
        btnMultiply.setForeground(new java.awt.Color(255, 0, 0));
        btnMultiply.setText("*");
        btnMultiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMultiplyActionPerformed(evt);
            }
        });

        btnMinus.setFont(new java.awt.Font("맑은 고딕", 1, 36)); // NOI18N
        btnMinus.setForeground(new java.awt.Color(255, 0, 0));
        btnMinus.setText("-");
        btnMinus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinusActionPerformed(evt);
            }
        });

        btnPlus.setFont(new java.awt.Font("맑은 고딕", 1, 36)); // NOI18N
        btnPlus.setForeground(new java.awt.Color(255, 0, 0));
        btnPlus.setText("+");
        btnPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlusActionPerformed(evt);
            }
        });

        btnReminder.setFont(new java.awt.Font("맑은 고딕", 1, 36)); // NOI18N
        btnReminder.setForeground(new java.awt.Color(0, 0, 255));
        btnReminder.setText("%");
        btnReminder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReminderActionPerformed(evt);
            }
        });

        btnFraction.setFont(new java.awt.Font("맑은 고딕", 1, 36)); // NOI18N
        btnFraction.setForeground(new java.awt.Color(0, 0, 255));
        btnFraction.setText("1/x");
        btnFraction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFractionActionPerformed(evt);
            }
        });

        btnEqual.setFont(new java.awt.Font("맑은 고딕", 1, 36)); // NOI18N
        btnEqual.setForeground(new java.awt.Color(255, 0, 0));
        btnEqual.setText("=");
        btnEqual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEqualActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textField)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnMC, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                            .addComponent(btnMR, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnMS, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnMP, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBackspace, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCE, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(btn0, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnPM, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnPlus, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnEqual, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(btn7, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                            .addComponent(btn4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btn1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btn5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btn8, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                            .addComponent(btn2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(btn9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btn6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btn3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btnMultiply, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnDivision, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btnMinus, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(btnsqrt, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(btnReminder, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(btnFraction, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnMC, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn5, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(btnMR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn1, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(btnMS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBackspace, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnC, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnCE, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnDivision, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnsqrt, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btn6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnMultiply, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnReminder, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnMinus, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnFraction, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btn3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEqual, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnMP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnPlus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn0ActionPerformed
        //textField에 0이 입력되는 버튼입니다.
        if(textField.getText().equals("0") || textField.getText().equals("0.0")){
            textField.setText("0");
        } //textField에 0이나 0.0과 같이 없는값이 입력되어 있을 시 textField가 초기화 된 후 선택된 값이 입력됩니다.
        else{
            textField.setText(textField.getText() + "0");
        } //아닐 시 이미 textField의 입력된 값에 선택된 값을 추가로 입력합니다.
        symbol = 0; //수가 입력된 것이니 symbol의 값은 0이 됩니다.
    }//GEN-LAST:event_btn0ActionPerformed

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        //textField에 1이 입력되는 버튼입니다.
        if(textField.getText().equals("0") || textField.getText().equals("0.0")){
            textField.setText("1");
        } //textField에 0이나 0.0과 같이 없는값이 입력되어 있을 시 textField가 초기화 된 후 선택된 값이 입력됩니다.
        else{
            textField.setText(textField.getText() + "1");
        } //아닐 시 이미 textField의 입력된 값에 선택된 값을 추가로 입력합니다.
        symbol = 0; //수가 입력된 것이니 symbol의 값은 0이 됩니다.
    }//GEN-LAST:event_btn1ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        //textField에 2가 입력되는 버튼입니다.
        if(textField.getText().equals("0") || textField.getText().equals("0.0")){
            textField.setText("2");
        } //textField에 0이나 0.0과 같이 없는값이 입력되어 있을 시 textField가 초기화 된 후 선택된 값이 입력됩니다.
        else{
            textField.setText(textField.getText() + "2");
        } //아닐 시 이미 textField의 입력된 값에 선택된 값을 추가로 입력합니다.
        symbol = 0; //수가 입력된 것이니 symbol의 값은 0이 됩니다.
    }//GEN-LAST:event_btn2ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        //textField에 3이 입력되는 버튼입니다.
        if(textField.getText().equals("0") || textField.getText().equals("0.0")){
            textField.setText("3");
        } //textField에 0이나 0.0과 같이 없는값이 입력되어 있을 시 textField가 초기화 된 후 선택된 값이 입력됩니다.
        else{
            textField.setText(textField.getText() + "3");
        } //아닐 시 이미 textField의 입력된 값에 선택된 값을 추가로 입력합니다.
        symbol = 0; //수가 입력된 것이니 symbol의 값은 0이 됩니다.
    }//GEN-LAST:event_btn3ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        //textField에 4가 입력되는 버튼입니다.
        if(textField.getText().equals("0") || textField.getText().equals("0.0")){
            textField.setText("4");
        } //textField에 0이나 0.0과 같이 없는값이 입력되어 있을 시 textField가 초기화 된 후 선택된 값이 입력됩니다.
        else{
            textField.setText(textField.getText() + "4");
        } //아닐 시 이미 textField의 입력된 값에 선택된 값을 추가로 입력합니다.
        symbol = 0; //수가 입력된 것이니 symbol의 값은 0이 됩니다.
    }//GEN-LAST:event_btn4ActionPerformed

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
        //textField에 5가 입력되는 버튼입니다.
        if(textField.getText().equals("0") || textField.getText().equals("0.0")){
            textField.setText("5");
        } //textField에 0이나 0.0과 같이 없는값이 입력되어 있을 시 textField가 초기화 된 후 선택된 값이 입력됩니다.
        else{
            textField.setText(textField.getText() + "5");
        } //아닐 시 이미 textField의 입력된 값에 선택된 값을 추가로 입력합니다.
        symbol = 0; //수가 입력된 것이니 symbol의 값은 0이 됩니다.
    }//GEN-LAST:event_btn5ActionPerformed

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
        //textField에 6이 입력되는 버튼입니다.
        if(textField.getText().equals("0") || textField.getText().equals("0.0")){
            textField.setText("6");
        } //textField에 0이나 0.0과 같이 없는값이 입력되어 있을 시 textField가 초기화 된 후 선택된 값이 입력됩니다.
        else{
            textField.setText(textField.getText() + "6");
        } //아닐 시 이미 textField의 입력된 값에 선택된 값을 추가로 입력합니다.
        symbol = 0; //수가 입력된 것이니 symbol의 값은 0이 됩니다.
    }//GEN-LAST:event_btn6ActionPerformed

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
        //textField에 7이 입력되는 버튼입니다.
        if(textField.getText().equals("0") || textField.getText().equals("0.0")){
            textField.setText("7");
        } //textField에 0이나 0.0과 같이 없는값이 입력되어 있을 시 textField가 초기화 된 후 선택된 값이 입력됩니다.
        else{
            textField.setText(textField.getText() + "7");
        } //아닐 시 이미 textField의 입력된 값에 선택된 값을 추가로 입력합니다.
        symbol = 0; //수가 입력된 것이니 symbol의 값은 0이 됩니다.
    }//GEN-LAST:event_btn7ActionPerformed

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed
        //textField에 8이 입력되는 버튼입니다.
        if(textField.getText().equals("0") || textField.getText().equals("0.0")){
            textField.setText("8");
        } //textField에 0이나 0.0과 같이 없는값이 입력되어 있을 시 textField가 초기화 된 후 선택된 값이 입력됩니다.
        else{
            textField.setText(textField.getText() + "8");
        } //아닐 시 이미 textField의 입력된 값에 선택된 값을 추가로 입력합니다.
        symbol = 0; //수가 입력된 것이니 symbol의 값은 0이 됩니다.
    }//GEN-LAST:event_btn8ActionPerformed

    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed
        //textField에 9가 입력되는 버튼입니다.
        if(textField.getText().equals("0") || textField.getText().equals("0.0")){
            textField.setText("9");
        } //textField에 0이나 0.0과 같이 없는값이 입력되어 있을 시 textField가 초기화 된 후 선택된 값이 입력됩니다.
        else{
            textField.setText(textField.getText() + "9");
        } //아닐 시 이미 textField의 입력된 값에 선택된 값을 추가로 입력합니다.
        symbol = 0; //수가 입력된 것이니 symbol의 값은 0이 됩니다.
    }//GEN-LAST:event_btn9ActionPerformed

    private void btnPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlusActionPerformed
        //+연산을 진행하는 버튼입니다.
        if(symbol==0){ //연산자가 연속으로 나오지 않게 하기 위해 symbol의 값이 0일때만 진행합니다.
            try {
                textField.setText(engine.eval(textField.getText()).toString());
            } catch (ScriptException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.ALL.SEVERE, null, ex);
            } //textField안의 식을 eval함수를 이용하여 계산한 값을 textField에 넣습니다.
            textField.setText(textField.getText() + "+"); //textField에 선택된 연산자를 뒤에 추가합니다.
            symbol = 1; //연산자가 입력되었으니 symbol의 값을 1로 만듭니다.
        }
    }//GEN-LAST:event_btnPlusActionPerformed

    private void btnMinusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinusActionPerformed
        //-연산을 진행하는 버튼입니다.
        if(symbol==0){ //연산자가 연속으로 나오지 않게 하기 위해 symbol의 값이 0일때만 진행합니다.
            try {
                textField.setText(engine.eval(textField.getText()).toString());//eval()함수로 계산
            } catch (ScriptException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.ALL.SEVERE, null, ex);
            } //textField안의 식을 eval함수를 이용하여 계산한 값을 textField에 넣습니다.
            textField.setText(textField.getText() + "-"); //textField에 선택된 연산자를 뒤에 추가합니다.
            symbol = 1; //연산자가 입력되었으니 symbol의 값을 1로 만듭니다.
        }
    }//GEN-LAST:event_btnMinusActionPerformed

    private void btnMultiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMultiplyActionPerformed
        //*연산을 진행하는 버튼입니다.
        if(symbol==0){ //연산자가 연속으로 나오지 않게 하기 위해 symbol의 값이 0일때만 진행합니다.
            try {
                textField.setText(engine.eval(textField.getText()).toString());//eval()함수로 계산
            } catch (ScriptException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.ALL.SEVERE, null, ex);
            } //textField안의 식을 eval함수를 이용하여 계산한 값을 textField에 넣습니다.
            textField.setText(textField.getText() + "*"); //textField에 선택된 연산자를 뒤에 추가합니다.
            symbol = 1; //연산자가 입력되었으니 symbol의 값을 1로 만듭니다.
        }
    }//GEN-LAST:event_btnMultiplyActionPerformed

    private void btnDivisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDivisionActionPerformed
        // /연산을 진행하는 버튼입니다.
        if(symbol==0){ //연산자가 연속으로 나오지 않게 하기 위해 symbol의 값이 0일때만 진행합니다.
            try {
                textField.setText(engine.eval(textField.getText()).toString());
            } catch (ScriptException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.ALL.SEVERE, null, ex);
            } //textField안의 식을 eval함수를 이용하여 계산한 값을 textField에 넣습니다.
            textField.setText(textField.getText() + "/"); //textField에 선택된 연산자를 뒤에 추가합니다.
            symbol = 1; //연산자가 입력되었으니 symbol의 값을 1로 만듭니다.
        }
    }//GEN-LAST:event_btnDivisionActionPerformed

    private void btnReminderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReminderActionPerformed
        //%연산을 진행하는 버튼입니다.
        if(symbol==0){ //연산자가 연속으로 나오지 않게 하기 위해 symbol의 값이 0일때만 진행합니다.
            try {
                textField.setText(engine.eval(textField.getText()).toString());
            } catch (ScriptException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.ALL.SEVERE, null, ex);
            } //textField안의 식을 eval함수를 이용하여 계산한 값을 textField에 넣습니다.
            textField.setText(textField.getText() + "%"); //textField에 선택된 연산자를 뒤에 추가합니다.
            symbol = 1; //연산자가 입력되었으니 symbol의 값을 1로 만듭니다.
        }
    }//GEN-LAST:event_btnReminderActionPerformed

    private void btnPointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPointActionPerformed
        //소수점을 입력하는 버튼입니다.
        if(symbol==0)
            textField.setText(textField.getText() + "."); //이전에 숫자가 입력되었을 시엔 .을 추가합니다.
        else{
            textField.setText(textField.getText().substring(0, textField.getText().length() - 1));
            textField.setText(textField.getText() + ".");
        } //이전에 연산자가 입력되었을 시엔 마지막에 입력된 연산자를 지우고 .을 추가하여 이전의 수에 소수점을 추가할 수 있게 만듭니다.
        symbol = 1; //연산자가 입력되었으니 symbol의 값을 1로 만듭니다.
    }//GEN-LAST:event_btnPointActionPerformed

    private void btnEqualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEqualActionPerformed
        //=연산을 진행하는 버튼입니다.
        if(symbol==0){ //바로 이전에 연산자가 입력되었으면 계산식이 오류이니 symbol이 0일때만 계산하도록 합니다.
            try {
                textField.setText(engine.eval(textField.getText()).toString());

            } catch (ScriptException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.ALL.SEVERE, null, ex);
            } //textField안의 식을 eval함수를 이용하여 계산한 값을 textField에 넣습니다.
        }
    }//GEN-LAST:event_btnEqualActionPerformed

    private void btnBackspaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackspaceActionPerformed
        //Backspace를 진행하는 버튼입니다.
        if (!textField.getText().equals("")) {
            textField.setText(textField.getText().substring(0, textField.getText().length() - 1));
        } //textField의 값이 아예 안들어있는것이 아닐 시에 textField의 값의 마지막문자를 뺀 값을 textField에 넣습니다.
    }//GEN-LAST:event_btnBackspaceActionPerformed

    private void btnCEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCEActionPerformed
        // Clear Entry를 진행하는 버튼입니다.
        String Operator[] = textField.getText().split("-|\\+|/|\\*|%"); //Operator 배열은 textField에 입력된 값을 연산식들을 기준으로 split한 배열입니다.
        if(Operator.length > 1){
            textField.setText(textField.getText().substring(0, textField.getText().length() - Operator[Operator.length - 1].length()));
            textField.setText(textField.getText().substring(0, textField.getText().length() - 1));
        } //textField의 수가 1개 초과로 들어있을 경우엔 마지막 Operator의 값에 연산자까지 지워줘야 하므로 문자 1개를 더 지워줬습니다.
        else{
            textField.setText("");
        } //textField의 수가 1개 이하일때는 그 하나 또는 0개의 수가 지워지게 되어 textField가 비게 되니 textField의 값을 다 지워줍니다.
    }//GEN-LAST:event_btnCEActionPerformed

    private void btnCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCActionPerformed
        // Clear를 진행하는 버튼입니다.
        textField.setText(""); //Clear를 진행하면 textField가 비게 되니 textField의 값을 다 지워줍니다.
    }//GEN-LAST:event_btnCActionPerformed

    private void btnMCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMCActionPerformed
        //Memory Clear를 진행하는 버튼입니다.
        memory = 0; //memory의 값을 0으로 초기화시켜줍니다.
    }//GEN-LAST:event_btnMCActionPerformed

    private void btnMRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMRActionPerformed
        // Memory Read를 진행하는 버튼입니다.
        if (symbol == 1 || textField.getText().length() == 0) {
            textField.setText(textField.getText() + memory);
            symbol = 0;
        } //textField가 비어있거나 연산자가 입력되어있는 상태일때만 실행할 수 있게 합니다. textField의 값에 memory를 추가한 후 수가 입력되었으니 symbol의 값을 1로 합니다.
    }//GEN-LAST:event_btnMRActionPerformed

    private void btnMSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMSActionPerformed
        // Memory Save를 진행하는 버튼입니다.
        String Operator[] = textField.getText().split("\\+|/|\\*|%"); //Operator 배열은 textField에 입력된 값을 -를 제외한 연산식들을 기준으로 split한 배열입니다. memory에 음수가 들어올 수도 있기 때문에 -는 제외했습니다.
        if (Operator[0].equals(textField.getText())) {
            memory = Float.parseFloat(textField.getText());
        }// textField에 수 하나만 입력되어 있을때만 실행할 수 있게 합니다. textField의 값을 Float로 바꾸어 memory에 넣습니다.
    }//GEN-LAST:event_btnMSActionPerformed

    private void btnMPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMPActionPerformed
        // Memory Plus를 진행하는 버튼입니다.
        if (memory < 0) {
            memory = memory * -1;
        } // memory가 음수라면 -1을 곱해 양수로 만들어 줍니다.
    }//GEN-LAST:event_btnMPActionPerformed

    private void btnPMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPMActionPerformed
        // 마지막에 입력된 수가 양수라면 음수로, 음수라면 양수로 전환을 진행하는 버튼입니다.
        String Operator[] = textField.getText().split("-|\\+|/|\\*|%"); //Operator 배열은 textField에 입력된 값을 연산식들을 기준으로 split한 배열입니다.
        float split = Float.parseFloat(Operator[Operator.length - 1]); //변수 split에 Operator배열에 마지막에 들어간 수를 넣습니다. 
        textField.setText(textField.getText().substring(0, textField.getText().length() - Operator[Operator.length - 1].length())); //textField에 마지막에 들어간 수를 뺍니다.
        if(Operator.length > 1){ //textField에 들어간 수가 1개보다 많을 경우를 나누는 이유는 1개 이하일 경우엔 아래 if문의 조건의 length() -1이 충족되지 않아서 입니다.
            if(textField.getText().substring(textField.getText().length() - 1).equals("-")){
                textField.setText(textField.getText().substring(0, textField.getText().length() - 1) + "+" + split);
            } //마지막에 들어간 연산자가 -일 경우엔 연산자가 연속으로 입력되지 않도록 -를 지운 후 + 를 추가하고 split를 추가합니다.
            else{
                if(textField.getText().substring(textField.getText().length() - 1).equals("+")){
                    textField.setText(textField.getText().substring(0, textField.getText().length() - 1) + "-" + split);
                } //마지막에 들어간 연산자가 +일 경우엔 연산자가 연속으로 입력되지 않도록 +를 지운 후 - 를 추가하고 split를 추가합니다.
                else{
                    split = split * -1;
                    textField.setText(textField.getText() + split);
                } //마지막에 들어간 연산자가 나머지라면 그냥 textField의 값에 split을 추가합니다.
            }
        }
        else{
            split = split * -1;
            textField.setText(textField.getText() + split);
        } //textField에 들어간 수가 1개뿐이라면 textField의 값에 split을 추가합니다.
    }//GEN-LAST:event_btnPMActionPerformed

    private void btnsqrtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsqrtActionPerformed
        // 마지막에 입력된 수를 그 수의 제곱근으로 변환하는 버튼입니다.
        String Operator[] = textField.getText().split("-|\\+|/|\\*|%"); //Operator 배열은 textField에 입력된 값을 연산식들을 기준으로 split한 배열입니다.
        if (symbol==1){
            textField.setText(textField.getText().substring(0, textField.getText().length() - 1));
            symbol=0;
        } //연산자가 마지막에 입력되어있다면 그 연산자를 지우고 마지막에 입력된 값이 연산자가 아니게 되니 symbol의 값을 0으로 바꿉니다.
        float n = (float) Math.sqrt(Float.parseFloat(textField.getText().substring(textField.getText().length() - Operator[Operator.length - 1].length(), textField.getText().length()))); // Math라이브러리의 sqrt함수를 사용하여 마지막에 입력된 값의 제곱근을 변수 n에 넣습니다.
        textField.setText(textField.getText().substring(0, textField.getText().length() - Operator[Operator.length - 1].length()) + n); //마지막에 입력된 수를 지운 후 그 뒤에 n을 추가로 textField에 넣습니다.
    }//GEN-LAST:event_btnsqrtActionPerformed

    private void btnFractionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFractionActionPerformed
        // 마지막에 입력된 수를 그 수의 1/X로 변환하는 버튼입니다.
        String Operator[] = textField.getText().split("-|\\+|/|\\*|%"); //Operator 배열은 textField에 입력된 값을 연산식들을 기준으로 split한 배열입니다.
        if (symbol==1){
            textField.setText(textField.getText().substring(0, textField.getText().length() - 1));
            symbol=0;
        } //연산자가 마지막에 입력되어있다면 그 연산자를 지우고 마지막에 입력된 값이 연산자가 아니게 되니 symbol의 값을 0으로 바꿉니다.
        float n = 1 / Float.parseFloat(textField.getText().substring(textField.getText().length() - Operator[Operator.length - 1].length(), textField.getText().length())); // 마지막에 입력된 값의 1/X을 변수 n에 넣습니다.
        textField.setText(textField.getText().substring(0, textField.getText().length() - Operator[Operator.length - 1].length()) + n); //마지막에 입력된 수를 지운 후 그 뒤에 n을 추가로 textField에 넣습니다.
    }//GEN-LAST:event_btnFractionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn0;
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JButton btnBackspace;
    private javax.swing.JButton btnC;
    private javax.swing.JButton btnCE;
    private javax.swing.JButton btnDivision;
    private javax.swing.JButton btnEqual;
    private javax.swing.JButton btnFraction;
    private javax.swing.JButton btnMC;
    private javax.swing.JButton btnMP;
    private javax.swing.JButton btnMR;
    private javax.swing.JButton btnMS;
    private javax.swing.JButton btnMinus;
    private javax.swing.JButton btnMultiply;
    private javax.swing.JButton btnPM;
    private javax.swing.JButton btnPlus;
    private javax.swing.JButton btnPoint;
    private javax.swing.JButton btnReminder;
    private javax.swing.JButton btnsqrt;
    private javax.swing.JTextField textField;
    // End of variables declaration//GEN-END:variables
}
